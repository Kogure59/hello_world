---
- name: Check if nvm is installed
  stat:
    path: /home/ec2-user/.nvm
  register: nvm_installed

- name: Install nvm
  get_url:
    url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh
    dest: /home/ec2-user/install_nvm.sh
    mode: 'u+rwx,g+rx,o+rx'
  when: not nvm_installed.stat.exists

- name: Run nvm installation script
  command: /bin/bash /home/ec2-user/install_nvm.sh
  args:
    creates: /home/ec2-user/.nvm

- name: Ensure nvm.sh script is loaded in .bashrc
  lineinfile:
    path: /home/ec2-user/.bashrc
    line: 'export NVM_DIR="/home/ec2-user/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" '
  when: not nvm_installed.stat.exists

- name: Source .bashrc to load nvm
  shell: source /home/ec2-user/.bashrc
  args:
    executable: /bin/bash

- name: Source nvm script and check version
  shell: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
    export NVM_DIR="/home/ec2-user/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    nvm --version
  args:
    executable: /bin/bash
  register: nvm_version
  ignore_errors: yes
  
- name: Fail if nvm is not installed correctly
  fail:
    msg: "NVM installation failed"
  when: nvm_version.rc != 0

- name: Check if Node.js is installed
  shell: |
    export NVM_DIR="/home/ec2-user/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    nvm list | grep -q '{{ node_version }}'
  register: node_installed
  ignore_errors: yes
  args:
    executable: /bin/bash

- name: Install Node.js
  shell: |
    export NVM_DIR="/home/ec2-user/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    nvm install {{ node_version }}
  when: node_installed.rc != 0
  args:
    executable: /bin/bash